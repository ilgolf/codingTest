package programmers;

import java.util.*;

class Solution {
	
	public static int[][] d = new int[10001][10001];
	
	void floyd(int n) {
		for(int k=0; k<n; ++k) { // 경로
			for(int i=0; i<n; i++) { // 출발점
				for(int j=0; j<n; j++) {  // 도착점
					if(d[i][k] + d[k][j] < d[i][j]) {
						d[i][j] = d[i][k] + d[k][j];
					}
				}
			}
		}
	}
	
	public int[] solution(int n, int[] passenger, int[][] train) {
		
		d[train[0][0]][train[0][1]] = passenger[0];
		
		for(int i=1; i<train.length+1; i++) {
			d[train[i][0] - 1][train[i][1] - 1] = passenger[i];
		}
		
		floyd(n);
		
		int[] answer = {};
		return answer;
	}

	public static void main(String[] args) {
		int[] passanger = { 1,1,1,1,1,1 };
		int n = 6;
		int[][] train = {{1,2},{1,3},{1,4},{3,5},{3,6}};

		Solution s = new Solution();
		int[] answer = s.solution(n, passanger, train);
		System.out.println(Arrays.toString(answer));
	}
}